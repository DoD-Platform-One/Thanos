{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname template (will maintain the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname template",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Add labels to all the deployed resources",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Add annotations to all the deployed resources",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes Cluster Domain",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Thanos image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Thanos image repository",
                    "default": "bitnami/thanos"
                },
                "tag": {
                    "type": "string",
                    "description": "Thanos image tag (immutable tags are recommended)",
                    "default": "0.32.2-debian-11-r2"
                },
                "digest": {
                    "type": "string",
                    "description": "Thanos image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Thanos image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Specify docker-registry secret names as an array",
                    "default": [],
                    "items": {}
                }
            }
        },
        "objstoreConfig": {
            "type": "string",
            "description": "The [objstore configuration](https://thanos.io/tip/thanos/storage.md/)",
            "default": ""
        },
        "indexCacheConfig": {
            "type": "string",
            "description": "The [index cache configuration](https://thanos.io/tip/components/store.md/)",
            "default": ""
        },
        "bucketCacheConfig": {
            "type": "string",
            "description": "The [bucket cache configuration](https://thanos.io/tip/components/store.md/)",
            "default": ""
        },
        "existingObjstoreSecret": {
            "type": "string",
            "description": "Secret with Objstore Configuration",
            "default": ""
        },
        "existingObjstoreSecretItems": {
            "type": "array",
            "description": "Optional item list for specifying a custom Secret key. If so, path should be objstore.yml",
            "default": [],
            "items": {}
        },
        "httpConfig": {
            "type": "string",
            "description": "The [https and basic auth configuration](https://thanos.io/tip/operating/https.md/)",
            "default": ""
        },
        "existingHttpConfigSecret": {
            "type": "string",
            "description": "Secret containing the HTTPS and Basic auth configuration",
            "default": ""
        },
        "https": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set to true to enable HTTPS. Requires a secret containing the certificate and key.",
                    "default": false
                },
                "autoGenerated": {
                    "type": "boolean",
                    "description": "Create self-signed TLS certificates.",
                    "default": false
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Existing secret containing your own server key and certificate",
                    "default": ""
                },
                "certFilename": {
                    "type": "string",
                    "description": "",
                    "default": "tls.crt"
                },
                "keyFilename": {
                    "type": "string",
                    "description": "",
                    "default": "tls.key"
                },
                "caFilename": {
                    "type": "string",
                    "description": "",
                    "default": "ca.crt"
                },
                "key": {
                    "type": "string",
                    "description": "TLS Key for Thanos HTTPS - ignored if existingSecret is provided",
                    "default": ""
                },
                "cert": {
                    "type": "string",
                    "description": "TLS Certificate for Thanos HTTPS - ignored if existingSecret is provided",
                    "default": ""
                },
                "ca": {
                    "type": "string",
                    "description": "(Optional, used for client) CA Certificate for Thanos HTTPS - ignored if existingSecret is provided",
                    "default": ""
                },
                "clientAuthType": {
                    "type": "string",
                    "description": "Server policy for client authentication using certificates. Maps to ClientAuth Policies.",
                    "default": ""
                }
            }
        },
        "auth": {
            "type": "object",
            "properties": {
                "basicAuthUsers": {
                    "type": "object",
                    "description": "Object containing <user>:<passwords> key-value pairs for each user that will have access via basic authentication",
                    "default": {}
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Specifies whether a ServiceAccount should be created",
                    "default": false
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                    "default": ""
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Automount service account token for the server service account",
                    "default": true
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations for service account. Evaluated as a template. Only used if `create` is `true`.",
                    "default": {}
                }
            }
        },
        "query": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set to true to enable Thanos Query component",
                    "default": true
                },
                "logLevel": {
                    "type": "string",
                    "description": "Thanos Query log level",
                    "default": "info"
                },
                "logFormat": {
                    "type": "string",
                    "description": "Thanos Query log format",
                    "default": "logfmt"
                },
                "replicaLabel": {
                    "type": "array",
                    "description": "Replica indicator(s) along which data is de-duplicated",
                    "default": [
                        "replica"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "dnsDiscovery": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable store APIs discovery via DNS",
                            "default": true
                        },
                        "sidecarsService": {
                            "type": "string",
                            "description": "Sidecars service name to discover them using DNS discovery",
                            "default": ""
                        },
                        "sidecarsNamespace": {
                            "type": "string",
                            "description": "Sidecars namespace to discover them using DNS discovery",
                            "default": ""
                        }
                    }
                },
                "stores": {
                    "type": "array",
                    "description": "Statically configure store APIs to connect with Thanos Query",
                    "default": [],
                    "items": {}
                },
                "sdConfig": {
                    "type": "string",
                    "description": "Query Service Discovery Configuration",
                    "default": ""
                },
                "existingSDConfigmap": {
                    "type": "string",
                    "description": "Name of existing ConfigMap with Ruler configuration",
                    "default": ""
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables for Thanos Query container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Thanos Query nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Thanos Query nodes",
                    "default": ""
                },
                "extraFlags": {
                    "type": "array",
                    "description": "Extra Flags to passed to Thanos Query",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Thanos Query replicas to deploy",
                    "default": 1
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy type for Thanos Query replicas",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for the Thanos Query pods",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the filesystem used by Thanos Query pods",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable container security context for the Thanos Query containers",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the service user running the Thanos Query containers",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the Thanos Query containers to run as a non root user",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Switch privilegeEscalation possibility on or off for Thanos Query containers",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "mount / (root) as a readonly filesystem on Thanos Query containers",
                            "default": true
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Thanos Query container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Thanos Query container",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Thanos Query containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Thanos Query containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Thanos Query containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Thanos Query pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Extra containers running as sidecars to Thanos Query pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Extra volumes to add to Thanos Query",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Extra volume mounts to add to the query container",
                    "default": [],
                    "items": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Query pod affinity preset",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Query pod anti-affinity preset. Ignored if `query.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "podAntiAffinityPresetTopologyKey": {
                    "type": "string",
                    "description": "Thanos Query pod anti-affinity topologyKey. Ignored if `query.affinity` is set.",
                    "default": ""
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Thanos Query node affinity preset type. Ignored if `query.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Thanos Query node label key to match Ignored if `query.affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Thanos Query node label values to match. Ignored if `query.affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Thanos Query affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Thanos Query node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Thanos Query tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Thanos Query pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Thanos Query pods",
                    "default": {}
                },
                "dnsConfig": {
                    "type": "object",
                    "description": "Deployment pod DNS config",
                    "default": {}
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Deployment pod DNS policy",
                    "default": ""
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Thanos Query container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Thanos Query priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Thanos Query pods",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for Thanos Query pods assignment spread across your cluster among failure-domains",
                    "default": [],
                    "items": {}
                },
                "grpc": {
                    "type": "object",
                    "properties": {
                        "server": {
                            "type": "object",
                            "properties": {
                                "tls": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable TLS encryption in the GRPC server",
                                            "default": false
                                        },
                                        "autoGenerated": {
                                            "type": "boolean",
                                            "description": "Create self-signed TLS certificates. Currently only supports PEM certificates",
                                            "default": false
                                        },
                                        "cert": {
                                            "type": "string",
                                            "description": "TLS Certificate for GRPC server - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "TLS Key for GRPC server - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "ca": {
                                            "type": "string",
                                            "description": "TLS CA to verify clients against - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "existingSecret": {
                                            "type": "object",
                                            "description": "Existing secret containing your own TLS certificates",
                                            "default": {}
                                        }
                                    }
                                }
                            }
                        },
                        "client": {
                            "type": "object",
                            "properties": {
                                "serverName": {
                                    "type": "string",
                                    "description": "Server name to verify the hostname on the returned GRPC certificates",
                                    "default": ""
                                },
                                "tls": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable TLS encryption in the GRPC server",
                                            "default": false
                                        },
                                        "autoGenerated": {
                                            "type": "boolean",
                                            "description": "Create self-signed TLS certificates. Currently only supports PEM certificates",
                                            "default": false
                                        },
                                        "cert": {
                                            "type": "string",
                                            "description": "TLS Certificate for GRPC server - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "TLS Key for GRPC server - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "ca": {
                                            "type": "string",
                                            "description": "TLS CA to verify clients against - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "existingSecret": {
                                            "type": "object",
                                            "description": "Existing secret containing your own TLS certificates",
                                            "default": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Thanos Query service HTTP port",
                                    "default": 9090
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Specify the Thanos Query HTTP nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Thanos Query service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Load balancer IP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Address that are allowed when service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Thanos Query service externalTrafficPolicy",
                            "default": "Cluster"
                        },
                        "labels": {
                            "type": "object",
                            "description": "Labels for Thanos Query service",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Query service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the Thanos Query service",
                            "default": [],
                            "items": {}
                        },
                        "labelSelectorsOverride": {
                            "type": "object",
                            "description": "Selector for Thanos Query service",
                            "default": {}
                        },
                        "additionalHeadless": {
                            "type": "boolean",
                            "description": "Additional Headless service",
                            "default": false
                        },
                        "headless": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for the headless service.",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "serviceGrpc": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "grpc": {
                                    "type": "number",
                                    "description": "Thanos Query service GRPC port",
                                    "default": 10901
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "grpc": {
                                    "type": "string",
                                    "description": "Specify the Thanos Query GRPC nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Thanos Query service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Load balancer IP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Address that are allowed when service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Thanos Query service externalTrafficPolicy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Query service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the Thanos Query service",
                            "default": [],
                            "items": {}
                        },
                        "labelSelectorsOverride": {
                            "type": "object",
                            "description": "Selector for Thanos Query service",
                            "default": {}
                        },
                        "additionalHeadless": {
                            "type": "boolean",
                            "description": "Additional Headless service",
                            "default": false
                        },
                        "headless": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for the headless service.",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Enable/disable auto mounting of the service account token only for the deployment",
                    "default": true
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Query Service Account",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Enable/disable auto mounting of the service account token",
                            "default": true
                        }
                    }
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Create a ClusterRole and ClusterRoleBinding for the Thanos Query Service Account",
                            "default": false
                        },
                        "rules": {
                            "type": "array",
                            "description": "Custom RBAC rules to set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "pspEnabled": {
                    "type": "boolean",
                    "description": "Whether to create a PodSecurityPolicy for Thanos Query",
                    "default": false
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable autoscaling for Thanos Query",
                            "default": false
                        },
                        "minReplicas": {
                            "type": "string",
                            "description": "Minimum number of Thanos Query replicas",
                            "default": ""
                        },
                        "maxReplicas": {
                            "type": "string",
                            "description": "Maximum number of Thanos Query replicas",
                            "default": ""
                        },
                        "targetCPU": {
                            "type": "string",
                            "description": "Target CPU utilization percentage",
                            "default": ""
                        },
                        "targetMemory": {
                            "type": "string",
                            "description": "Target Memory utilization percentage",
                            "default": ""
                        }
                    }
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation for Thanos Query",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress controller resource",
                            "default": false
                        },
                        "hostname": {
                            "type": "string",
                            "description": "Default host for the ingress resource",
                            "default": "thanos.local"
                        },
                        "secretName": {
                            "type": "string",
                            "description": "Custom secretName for the ingress resource",
                            "default": ""
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                            "default": {}
                        },
                        "extraHosts": {
                            "type": "array",
                            "description": "The list of additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "extraTls": {
                            "type": "array",
                            "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "secrets": {
                            "type": "array",
                            "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                            "default": [],
                            "items": {}
                        },
                        "extraRules": {
                            "type": "array",
                            "description": "Additional rules to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "Enable TLS configuration for the hostname defined at `query.ingress.hostname` parameter",
                            "default": false
                        },
                        "selfSigned": {
                            "type": "boolean",
                            "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                            "default": false
                        },
                        "apiVersion": {
                            "type": "string",
                            "description": "Force Ingress API version (automatically detected if not set)",
                            "default": ""
                        },
                        "path": {
                            "type": "string",
                            "description": "Ingress path",
                            "default": "/"
                        },
                        "pathType": {
                            "type": "string",
                            "description": "Ingress path type",
                            "default": "ImplementationSpecific"
                        },
                        "grpc": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable ingress controller resource (GRPC)",
                                    "default": false
                                },
                                "hostname": {
                                    "type": "string",
                                    "description": "Default host for the ingress resource (GRPC)",
                                    "default": "thanos-grpc.local"
                                },
                                "secretName": {
                                    "type": "string",
                                    "description": "Custom secretName for the ingress resource (GRPC)",
                                    "default": ""
                                },
                                "ingressClassName": {
                                    "type": "string",
                                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                                    "default": ""
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional annotations for the Ingress resource (GRPC). To enable certificate autogeneration, place here your cert-manager annotations.",
                                    "default": {}
                                },
                                "extraHosts": {
                                    "type": "array",
                                    "description": "The list of additional hostnames to be covered with this ingress record.",
                                    "default": [],
                                    "items": {}
                                },
                                "extraTls": {
                                    "type": "array",
                                    "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                                    "default": [],
                                    "items": {}
                                },
                                "secrets": {
                                    "type": "array",
                                    "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                                    "default": [],
                                    "items": {}
                                },
                                "extraRules": {
                                    "type": "array",
                                    "description": "Additional rules to be covered with this ingress record",
                                    "default": [],
                                    "items": {}
                                },
                                "tls": {
                                    "type": "boolean",
                                    "description": "Enable TLS configuration for the hostname defined at `query.ingress.grpc.hostname` parameter",
                                    "default": false
                                },
                                "selfSigned": {
                                    "type": "boolean",
                                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                                    "default": false
                                },
                                "apiVersion": {
                                    "type": "string",
                                    "description": "Override API Version (automatically detected if not set)",
                                    "default": ""
                                },
                                "path": {
                                    "type": "string",
                                    "description": "Ingress Path",
                                    "default": "/"
                                },
                                "pathType": {
                                    "type": "string",
                                    "description": "Ingress Path type",
                                    "default": "ImplementationSpecific"
                                }
                            }
                        }
                    }
                }
            }
        },
        "queryFrontend": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable Thanos Query Frontend component",
                    "default": true
                },
                "logLevel": {
                    "type": "string",
                    "description": "Thanos Query Frontend log level",
                    "default": "info"
                },
                "logFormat": {
                    "type": "string",
                    "description": "Thanos Query Frontend log format",
                    "default": "logfmt"
                },
                "config": {
                    "type": "string",
                    "description": "Thanos Query Frontend configuration",
                    "default": ""
                },
                "existingConfigmap": {
                    "type": "string",
                    "description": "Name of existing ConfigMap with Thanos Query Frontend configuration",
                    "default": ""
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables for Thanos Query Frontend container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Thanos Query Frontend nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Thanos Query Frontend nodes",
                    "default": ""
                },
                "extraFlags": {
                    "type": "array",
                    "description": "Extra Flags to passed to Thanos Query Frontend",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Thanos Query Frontend replicas to deploy",
                    "default": 1
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy type for Thanos Query Frontend replicas",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for the Thanos Query Frontend pods",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the filesystem used by Thanos Query Frontend pods",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable container security context for the Thanos Query Frontend containers",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the service user running the Thanos Query Frontend containers",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the Thanos Query Frontend containers to run as a non root user",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Switch privilegeEscalation possibility on or off for Thanos Query Frontend containers",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "mount / (root) as a readonly filesystem on Thanos Query Frontend containers",
                            "default": true
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Thanos Query Frontend container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Thanos Query Frontend container",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Thanos Query Frontend containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Thanos Query Frontend containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Thanos Query Frontend containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Thanos Query Frontend pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Extra containers running as sidecars to Thanos Query Frontend pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Extra volumes to add to Thanos Query Frontend",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Extra volume mounts to add to the query-frontend container",
                    "default": [],
                    "items": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Query Frontend pod affinity preset",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Query Frontend pod anti-affinity preset. Ignored if `queryFrontend.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Thanos Query Frontend node affinity preset type. Ignored if `queryFrontend.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Thanos Query Frontend node label key to match. Ignored if `queryFrontend.affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Thanos Query Frontend node label values to match. Ignored if `queryFrontend.affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Thanos Query Frontend affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Thanos Query Frontend node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Thanos Query Frontend tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Thanos Query Frontend pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Thanos Query Frontend pods",
                    "default": {}
                },
                "dnsConfig": {
                    "type": "object",
                    "description": "Deployment pod DNS config",
                    "default": {}
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Deployment pod DNS policy",
                    "default": ""
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Thanos Query Frontend container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Thanos Query Frontend priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Thanos Query Frontend pods",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for Thanos Query Frontend pods assignment spread across your cluster among failure-domains",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Thanos Query Frontend service HTTP port",
                                    "default": 9090
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Specify the Thanos Query Frontend HTTP nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Thanos Query Frontend service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Load balancer IP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Address that are allowed when service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Thanos Query Frontend service externalTrafficPolicy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Query Frontend service",
                            "default": {}
                        },
                        "labels": {
                            "type": "object",
                            "description": "Labels for Thanos Query Frontend service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the Thanos Query Frontend service",
                            "default": [],
                            "items": {}
                        },
                        "labelSelectorsOverride": {
                            "type": "object",
                            "description": "Selector for Thanos Query service",
                            "default": {}
                        }
                    }
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Enable/disable auto mounting of the service account token only for the deployment",
                    "default": true
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Query Frontend Service Account",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Enable/disable auto mounting of the service account token",
                            "default": true
                        }
                    }
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Create a ClusterRole and ClusterRoleBinding for the Thanos Query Frontend Service Account",
                            "default": false
                        },
                        "rules": {
                            "type": "array",
                            "description": "Custom RBAC rules to set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "pspEnabled": {
                    "type": "boolean",
                    "description": "Whether to create a PodSecurityPolicy for Thanos Query Frontend",
                    "default": false
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable autoscaling for Thanos Query Frontend",
                            "default": false
                        },
                        "minReplicas": {
                            "type": "string",
                            "description": "Minimum number of Thanos Query Frontend replicas",
                            "default": ""
                        },
                        "maxReplicas": {
                            "type": "string",
                            "description": "Maximum number of Thanos Query Frontend replicas",
                            "default": ""
                        },
                        "targetCPU": {
                            "type": "string",
                            "description": "Target CPU utilization percentage",
                            "default": ""
                        },
                        "targetMemory": {
                            "type": "string",
                            "description": "Target Memory utilization percentage",
                            "default": ""
                        }
                    }
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation for Thanos Query Frontend",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress controller resource",
                            "default": false
                        },
                        "hostname": {
                            "type": "string",
                            "description": "Default host for the ingress resource",
                            "default": "thanos.local"
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                            "default": {}
                        },
                        "extraHosts": {
                            "type": "array",
                            "description": "The list of additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "extraTls": {
                            "type": "array",
                            "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "secrets": {
                            "type": "array",
                            "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                            "default": [],
                            "items": {}
                        },
                        "extraRules": {
                            "type": "array",
                            "description": "Additional rules to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "Enable TLS configuration for the hostname defined at `queryFrontend.ingress.hostname` parameter",
                            "default": false
                        },
                        "selfSigned": {
                            "type": "boolean",
                            "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                            "default": false
                        },
                        "apiVersion": {
                            "type": "string",
                            "description": "Force Ingress API version (automatically detected if not set)",
                            "default": ""
                        },
                        "path": {
                            "type": "string",
                            "description": "Ingress path",
                            "default": "/"
                        },
                        "pathType": {
                            "type": "string",
                            "description": "Ingress path type",
                            "default": "ImplementationSpecific"
                        }
                    }
                }
            }
        },
        "bucketweb": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable Thanos Bucket Web component",
                    "default": false
                },
                "logLevel": {
                    "type": "string",
                    "description": "Thanos Bucket Web log level",
                    "default": "info"
                },
                "logFormat": {
                    "type": "string",
                    "description": "Thanos Bucket Web log format",
                    "default": "logfmt"
                },
                "refresh": {
                    "type": "string",
                    "description": "Refresh interval to download metadata from remote storage",
                    "default": "30m"
                },
                "timeout": {
                    "type": "string",
                    "description": "Timeout to download metadata from remote storage",
                    "default": "5m"
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables for Thanos Bucket Web container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Thanos Bucket Web nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Thanos Bucket Web nodes",
                    "default": ""
                },
                "extraFlags": {
                    "type": "array",
                    "description": "Extra Flags to passed to Thanos Bucket Web",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Thanos Bucket Web replicas to deploy",
                    "default": 1
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy type for Thanos Bucket Web replicas",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for the Thanos Bucket Web pods",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the filesystem used by Thanos Bucket Web pods",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable container security context for the Thanos Bucket Web containers",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the service user running the Thanos Bucket Web containers",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the Thanos Bucket Web containers to run as a non root user",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Switch privilegeEscalation possibility on or off for Thanos Bucket Web containers",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "mount / (root) as a readonly filesystem on Thanos Bucket Web containers",
                            "default": true
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Thanos Bucket Web container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Thanos Bucket Web container",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Thanos Bucket Web containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Thanos Bucket Web containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Thanos Bucket Web containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Thanos Bucket Web pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Extra containers running as sidecars to Thanos Bucket Web pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Extra volumes to add to Bucket Web",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Extra volume mounts to add to the bucketweb container",
                    "default": [],
                    "items": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Bucket Web pod affinity preset",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Bucket Web pod anti-affinity preset. Ignored if `bucketweb.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Thanos Bucket Web node affinity preset type. Ignored if `bucketweb.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Thanos Bucket Web node label key to match. Ignored if `bucketweb.affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Thanos Bucket Web node label values to match. Ignored if `bucketweb.affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Thanos Bucket Web affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Thanos Bucket Web node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Thanos Bucket Web tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Thanos Bucket Web pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Thanos Bucket Web pods",
                    "default": {}
                },
                "dnsConfig": {
                    "type": "object",
                    "description": "Deployment pod DNS config",
                    "default": {}
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Deployment pod DNS policy",
                    "default": ""
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Thanos Bucket Web container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Thanos Bucket Web priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Thanos Bucket Web pods",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for Thanos Bucket Web pods assignment spread across your cluster among failure-domains",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Thanos Bucket Web service HTTP port",
                                    "default": 8080
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Specify the Thanos Bucket Web HTTP nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Thanos Bucket Web service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Load balancer IP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Address that are allowed when service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Thanos Bucket Web service externalTrafficPolicy",
                            "default": "Cluster"
                        },
                        "labels": {
                            "type": "object",
                            "description": "Extra labels for Thanos Bucket Web service",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Bucket Web service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the Thanos Bucket Web service",
                            "default": [],
                            "items": {}
                        },
                        "labelSelectorsOverride": {
                            "type": "object",
                            "description": "Selector for Thanos Query service",
                            "default": {}
                        }
                    }
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Enable/disable auto mounting of the service account token only for the deployment",
                    "default": true
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Bucket Web Service Account",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Enable/disable auto mounting of the service account token",
                            "default": true
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable autoscaling for Thanos Bucket Web",
                            "default": false
                        },
                        "minReplicas": {
                            "type": "string",
                            "description": "Minimum number of Thanos Bucket Web replicas",
                            "default": ""
                        },
                        "maxReplicas": {
                            "type": "string",
                            "description": "Maximum number of Thanos Bucket Web replicas",
                            "default": ""
                        },
                        "targetCPU": {
                            "type": "string",
                            "description": "Target CPU utilization percentage",
                            "default": ""
                        },
                        "targetMemory": {
                            "type": "string",
                            "description": "Target Memory utilization percentage",
                            "default": ""
                        }
                    }
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation for Thanos Bucket Web",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress controller resource",
                            "default": false
                        },
                        "hostname": {
                            "type": "string",
                            "description": "Default host for the ingress resource",
                            "default": "thanos-bucketweb.local"
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                            "default": {}
                        },
                        "extraHosts": {
                            "type": "array",
                            "description": "The list of additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "extraTls": {
                            "type": "array",
                            "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "secrets": {
                            "type": "array",
                            "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                            "default": [],
                            "items": {}
                        },
                        "extraRules": {
                            "type": "array",
                            "description": "Additional rules to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "Enable TLS configuration for the hostname defined at `bucketweb.ingress.hostname` parameter",
                            "default": false
                        },
                        "selfSigned": {
                            "type": "boolean",
                            "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                            "default": false
                        },
                        "apiVersion": {
                            "type": "string",
                            "description": "Force Ingress API version (automatically detected if not set)",
                            "default": ""
                        },
                        "path": {
                            "type": "string",
                            "description": "Ingress path",
                            "default": "/"
                        },
                        "pathType": {
                            "type": "string",
                            "description": "Ingress path type",
                            "default": "ImplementationSpecific"
                        }
                    }
                }
            }
        },
        "compactor": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable Thanos Compactor component",
                    "default": false
                },
                "logLevel": {
                    "type": "string",
                    "description": "Thanos Compactor log level",
                    "default": "info"
                },
                "logFormat": {
                    "type": "string",
                    "description": "Thanos Compactor log format",
                    "default": "logfmt"
                },
                "retentionResolutionRaw": {
                    "type": "string",
                    "description": "Resolution and Retention flag",
                    "default": "30d"
                },
                "retentionResolution5m": {
                    "type": "string",
                    "description": "Resolution and Retention flag",
                    "default": "30d"
                },
                "retentionResolution1h": {
                    "type": "string",
                    "description": "Resolution and Retention flag",
                    "default": "10y"
                },
                "consistencyDelay": {
                    "type": "string",
                    "description": "Minimum age of fresh (non-compacted) blocks before they are being processed",
                    "default": "30m"
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables for Thanos Compactor container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Thanos Compactor nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Thanos Compactor nodes",
                    "default": ""
                },
                "extraFlags": {
                    "type": "array",
                    "description": "Extra Flags to passed to Thanos Compactor",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "cronJob": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Run compactor as a CronJob rather than a Deployment",
                            "default": false
                        },
                        "schedule": {
                            "type": "string",
                            "description": "The schedule in Cron format, see <https://en.wikipedia.org/wiki/Cron>",
                            "default": "0 */6 * * *"
                        },
                        "timeZone": {
                            "type": "string",
                            "description": "The time zone name for the given schedule, see <https://en.wikipedia.org/wiki/List_of_tz_database_time_zones>",
                            "default": ""
                        },
                        "concurrencyPolicy": {
                            "type": "string",
                            "description": "Specifies how to treat concurrent executions of a Job",
                            "default": "Forbid"
                        },
                        "startingDeadlineSeconds": {
                            "type": "string",
                            "description": "Optional deadline in seconds for starting the job if it misses scheduled time for any reason",
                            "default": ""
                        },
                        "suspend": {
                            "type": "string",
                            "description": "This flag tells the controller to suspend subsequent executions",
                            "default": ""
                        },
                        "successfulJobsHistoryLimit": {
                            "type": "string",
                            "description": "The number of successful finished jobs to retain",
                            "default": ""
                        },
                        "failedJobsHistoryLimit": {
                            "type": "string",
                            "description": "The number of failed finished jobs to retain",
                            "default": ""
                        },
                        "backoffLimit": {
                            "type": "string",
                            "description": "Specifies the number of retries before marking this job failed",
                            "default": ""
                        }
                    }
                },
                "restartPolicy": {
                    "type": "string",
                    "description": "Compactor container restart policy.",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy type for Thanos Compactor replicas",
                            "default": "Recreate"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for the Thanos Compactor pods",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the filesystem used by Thanos Compactor pods",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable container security context for the Thanos Compactor containers",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the service user running the Thanos Compactor containers",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the Thanos Compactor containers to run as a non root user",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Switch privilegeEscalation possibility on or off for Thanos Compactor containers",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "mount / (root) as a readonly filesystem on Thanos Compactor containers",
                            "default": true
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Thanos Compactor container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Thanos Compactor container",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Thanos Compactor containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Thanos Compactor containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Thanos Compactor containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Thanos Compactor pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Extra containers running as sidecars to Thanos Compactor pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Extra volumes to add to Thanos Compactor",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Extra volume mounts to add to the compactor container",
                    "default": [],
                    "items": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Compactor pod affinity preset",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Compactor pod anti-affinity preset. Ignored if `compactor.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Thanos Compactor node affinity preset type. Ignored if `compactor.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Thanos Compactor node label key to match. Ignored if `compactor.affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Thanos Compactor node label values to match. Ignored if `compactor.affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Thanos Compactor affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Thanos Compactor node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Thanos Compactor tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Thanos Compactor pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Thanos Compactor pods",
                    "default": {}
                },
                "dnsConfig": {
                    "type": "object",
                    "description": "Deployment pod DNS config",
                    "default": {}
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Deployment pod DNS policy",
                    "default": ""
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Thanos Compactor container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Thanos Compactor priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Thanos Compactor pods",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for Thanos Compactor pods assignment spread across your cluster among failure-domains",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Thanos Compactor service HTTP port",
                                    "default": 9090
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Specify the Thanos Compactor HTTP nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Thanos Compactor service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Load balancer IP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Addresses that are allowed when service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Thanos Compactor service externalTrafficPolicy",
                            "default": "Cluster"
                        },
                        "labels": {
                            "type": "object",
                            "description": "Labels for Thanos Compactor service",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Compactor service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the Thanos Compactor service",
                            "default": [],
                            "items": {}
                        },
                        "labelSelectorsOverride": {
                            "type": "object",
                            "description": "Selector for Thanos Query service",
                            "default": {}
                        }
                    }
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Enable/disable auto mounting of the service account token only for the deployment",
                    "default": true
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Compactor Service Account",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Enable/disable auto mounting of the service account token",
                            "default": true
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress controller resource",
                            "default": false
                        },
                        "hostname": {
                            "type": "string",
                            "description": "Default host for the ingress resource",
                            "default": "thanos-compactor.local"
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                            "default": {}
                        },
                        "extraHosts": {
                            "type": "array",
                            "description": "The list of additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "extraTls": {
                            "type": "array",
                            "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "secrets": {
                            "type": "array",
                            "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                            "default": [],
                            "items": {}
                        },
                        "extraRules": {
                            "type": "array",
                            "description": "Additional rules to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "Enable TLS configuration for the hostname defined at `compactor.ingress.hostname` parameter",
                            "default": false
                        },
                        "selfSigned": {
                            "type": "boolean",
                            "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                            "default": false
                        },
                        "apiVersion": {
                            "type": "string",
                            "description": "Force Ingress API version (automatically detected if not set)",
                            "default": ""
                        },
                        "path": {
                            "type": "string",
                            "description": "Ingress path",
                            "default": "/"
                        },
                        "pathType": {
                            "type": "string",
                            "description": "Ingress path type",
                            "default": "ImplementationSpecific"
                        }
                    }
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable data persistence using PVC(s) on Thanos Compactor pods",
                            "default": true
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "Specify the `storageClass` used to provision the volume",
                            "default": ""
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "PVC Access Modes for data volume",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "PVC Storage Request for data volume",
                            "default": "8Gi"
                        },
                        "labels": {
                            "type": "object",
                            "description": "Labels for the PVC",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the PVC",
                            "default": {}
                        },
                        "existingClaim": {
                            "type": "string",
                            "description": "Name of an existing PVC to use",
                            "default": ""
                        }
                    }
                }
            }
        },
        "storegateway": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable Thanos Store Gateway component",
                    "default": false
                },
                "logLevel": {
                    "type": "string",
                    "description": "Thanos Store Gateway log level",
                    "default": "info"
                },
                "logFormat": {
                    "type": "string",
                    "description": "Thanos Store Gateway log format",
                    "default": "logfmt"
                },
                "config": {
                    "type": "string",
                    "description": "Thanos Store Gateway configuration",
                    "default": ""
                },
                "existingConfigmap": {
                    "type": "string",
                    "description": "Name of existing ConfigMap with Thanos Store Gateway configuration",
                    "default": ""
                },
                "grpc": {
                    "type": "object",
                    "properties": {
                        "server": {
                            "type": "object",
                            "properties": {
                                "tls": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable TLS encryption in the GRPC server",
                                            "default": false
                                        },
                                        "autoGenerated": {
                                            "type": "boolean",
                                            "description": "Create self-signed TLS certificates. Currently only supports PEM certificates",
                                            "default": false
                                        },
                                        "cert": {
                                            "type": "string",
                                            "description": "TLS Certificate for GRPC server - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "TLS Key for GRPC server - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "ca": {
                                            "type": "string",
                                            "description": "TLS CA to verify clients against - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "existingSecret": {
                                            "type": "object",
                                            "description": "Existing secret containing your own TLS certificates",
                                            "default": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables for Thanos Store Gateway container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Thanos Store Gateway nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Thanos Store Gateway nodes",
                    "default": ""
                },
                "extraFlags": {
                    "type": "array",
                    "description": "Extra Flags to passed to Thanos Store Gateway",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Thanos Store Gateway replicas to deploy",
                    "default": 1
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy type for Thanos Store Gateway replicas",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "Statefulset Pod management policy: OrderedReady (default) or Parallel",
                    "default": "OrderedReady"
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for the Thanos Store Gateway pods",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the filesystem used by Thanos Store Gateway pods",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable container security context for the Thanos Store Gateway containers",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the service user running the Thanos Store Gateway containers",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the Thanos Store Gateway containers to run as a non root user",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Switch privilegeEscalation possibility on or off for Thanos Store Gateway containers",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "mount / (root) as a readonly filesystem on Thanos Store Gateway containers",
                            "default": true
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Thanos Store Gateway container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Thanos Store Gateway container",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Thanos Store Gateway containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Thanos Store Gateway containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Thanos Store Gateway containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Thanos Store Gateway pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Extra containers running as sidecars to Thanos Store Gateway pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Extra volumes to add to Thanos Store Gateway",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Extra volume mounts to add to the storegateway container",
                    "default": [],
                    "items": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Store Gateway pod affinity preset",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Store Gateway pod anti-affinity preset. Ignored if `storegateway.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Thanos Store Gateway node affinity preset type. Ignored if `storegateway.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Thanos Store Gateway node label key to match. Ignored if `storegateway.affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Thanos Store Gateway node label values to match. Ignored if `storegateway.affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Thanos Store Gateway affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Thanos Store Gateway node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Thanos Store Gateway tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Thanos Store Gateway pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Thanos Store Gateway pods",
                    "default": {}
                },
                "dnsConfig": {
                    "type": "object",
                    "description": "Deployment pod DNS config",
                    "default": {}
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Deployment pod DNS policy",
                    "default": ""
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Thanos Store Gateway container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Thanos Store Gateway priorityClassName",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for Thanos Store Gateway pods assignment spread across your cluster among failure-domains",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Thanos Store Gateway pods",
                    "default": ""
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Thanos Store Gateway service HTTP port",
                                    "default": 9090
                                },
                                "grpc": {
                                    "type": "number",
                                    "description": "Thanos Store Gateway service GRPC port",
                                    "default": 10901
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Specify the Thanos Store Gateway HTTP nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                },
                                "grpc": {
                                    "type": "string",
                                    "description": "Specify the Thanos Store Gateway GRPC nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Thanos Store Gateway service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Load balancer IP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Addresses that are allowed when service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Thanos Store Gateway service externalTrafficPolicy",
                            "default": "Cluster"
                        },
                        "labels": {
                            "type": "object",
                            "description": "Extra labels for Thanos Store Gateway service",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Store Gateway service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the Thanos Store Gateway service",
                            "default": [],
                            "items": {}
                        },
                        "labelSelectorsOverride": {
                            "type": "object",
                            "description": "Selector for Thanos Query service",
                            "default": {}
                        },
                        "additionalHeadless": {
                            "type": "boolean",
                            "description": "Additional Headless service",
                            "default": false
                        },
                        "headless": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for the headless service.",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable data persistence using PVC(s) on Thanos Store Gateway pods",
                            "default": true
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "Specify the `storageClass` used to provision the volume",
                            "default": ""
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "PVC Access Modes for data volume",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "PVC Storage Request for data volume",
                            "default": "8Gi"
                        },
                        "labels": {
                            "type": "object",
                            "description": "Labels for the PVC",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the PVC",
                            "default": {}
                        },
                        "existingClaim": {
                            "type": "string",
                            "description": "Name of an existing PVC to use",
                            "default": ""
                        }
                    }
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Enable/disable auto mounting of the service account token only for the sts",
                    "default": true
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Store Gateway Service Account",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Enable/disable auto mounting of the service account token",
                            "default": true
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable autoscaling for Thanos Store Gateway",
                            "default": false
                        },
                        "minReplicas": {
                            "type": "string",
                            "description": "Minimum number of Thanos Store Gateway replicas",
                            "default": ""
                        },
                        "maxReplicas": {
                            "type": "string",
                            "description": "Maximum number of Thanos Store Gateway replicas",
                            "default": ""
                        },
                        "targetCPU": {
                            "type": "string",
                            "description": "Target CPU utilization percentage",
                            "default": ""
                        },
                        "targetMemory": {
                            "type": "string",
                            "description": "Target Memory utilization percentage",
                            "default": ""
                        }
                    }
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation for Thanos Store Gateway",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress controller resource",
                            "default": false
                        },
                        "hostname": {
                            "type": "string",
                            "description": "Default host for the ingress resource",
                            "default": "thanos-storegateway.local"
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                            "default": {}
                        },
                        "extraHosts": {
                            "type": "array",
                            "description": "The list of additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "extraTls": {
                            "type": "array",
                            "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "secrets": {
                            "type": "array",
                            "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                            "default": [],
                            "items": {}
                        },
                        "extraRules": {
                            "type": "array",
                            "description": "Additional rules to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "Enable TLS configuration for the hostname defined at `storegateway.ingress.hostname` parameter",
                            "default": false
                        },
                        "selfSigned": {
                            "type": "boolean",
                            "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                            "default": false
                        },
                        "apiVersion": {
                            "type": "string",
                            "description": "Force Ingress API version (automatically detected if not set)",
                            "default": ""
                        },
                        "path": {
                            "type": "string",
                            "description": "Ingress path",
                            "default": "/"
                        },
                        "pathType": {
                            "type": "string",
                            "description": "Ingress path type",
                            "default": "ImplementationSpecific"
                        },
                        "grpc": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable ingress controller resource (GRPC)",
                                    "default": false
                                },
                                "hostname": {
                                    "type": "string",
                                    "description": "Default host for the ingress resource (GRPC)",
                                    "default": "thanos-grpc.local"
                                },
                                "ingressClassName": {
                                    "type": "string",
                                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                                    "default": ""
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional annotations for the Ingress resource (GRPC). To enable certificate autogeneration, place here your cert-manager annotations.",
                                    "default": {}
                                },
                                "extraHosts": {
                                    "type": "array",
                                    "description": "The list of additional hostnames to be covered with this ingress record.",
                                    "default": [],
                                    "items": {}
                                },
                                "extraTls": {
                                    "type": "array",
                                    "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                                    "default": [],
                                    "items": {}
                                },
                                "secrets": {
                                    "type": "array",
                                    "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                                    "default": [],
                                    "items": {}
                                },
                                "extraRules": {
                                    "type": "array",
                                    "description": "Additional rules to be covered with this ingress record",
                                    "default": [],
                                    "items": {}
                                },
                                "tls": {
                                    "type": "boolean",
                                    "description": "Enable TLS configuration for the hostname defined at `storegateway.ingress.grpc.hostname` parameter",
                                    "default": false
                                },
                                "selfSigned": {
                                    "type": "boolean",
                                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                                    "default": false
                                },
                                "apiVersion": {
                                    "type": "string",
                                    "description": "Override API Version (automatically detected if not set)",
                                    "default": ""
                                },
                                "path": {
                                    "type": "string",
                                    "description": "Ingress Path",
                                    "default": "/"
                                },
                                "pathType": {
                                    "type": "string",
                                    "description": "Ingress Path type",
                                    "default": "ImplementationSpecific"
                                }
                            }
                        }
                    }
                },
                "sharded": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable sharding for Thanos Store Gateway",
                            "default": false
                        },
                        "hashPartitioning": {
                            "type": "object",
                            "properties": {
                                "shards": {
                                    "type": "string",
                                    "description": "Setting hashPartitioning will create multiple store statefulsets based on the number of shards specified using the hashmod of the blocks",
                                    "default": ""
                                }
                            }
                        },
                        "timePartitioning": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "min": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "max": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            }
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "clusterIPs": {
                                    "type": "array",
                                    "description": "Array of cluster IPs for each Store Gateway service. Length must be the same as the number of shards",
                                    "default": [],
                                    "items": {}
                                },
                                "loadBalancerIPs": {
                                    "type": "array",
                                    "description": "Array of load balancer IPs for each Store Gateway service. Length must be the same as the number of shards",
                                    "default": [],
                                    "items": {}
                                },
                                "http": {
                                    "type": "object",
                                    "properties": {
                                        "nodePorts": {
                                            "type": "array",
                                            "description": "Array of http node ports used for Store Gateway service. Length must be the same as the number of shards",
                                            "default": [],
                                            "items": {}
                                        }
                                    }
                                },
                                "grpc": {
                                    "type": "object",
                                    "properties": {
                                        "nodePorts": {
                                            "type": "array",
                                            "description": "Array of grpc node ports used for Store Gateway service. Length must be the same as the number of shards",
                                            "default": [],
                                            "items": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "ruler": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable Thanos Ruler component",
                    "default": false
                },
                "logLevel": {
                    "type": "string",
                    "description": "Thanos Ruler log level",
                    "default": "info"
                },
                "logFormat": {
                    "type": "string",
                    "description": "Thanos Ruler log format",
                    "default": "logfmt"
                },
                "replicaLabel": {
                    "type": "string",
                    "description": "Label to treat as a replica indicator along which data is de-duplicated",
                    "default": "replica"
                },
                "dnsDiscovery": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Dynamically configure Query APIs using DNS discovery",
                            "default": true
                        }
                    }
                },
                "queryURL": {
                    "type": "string",
                    "description": "Thanos query/query-frontend URL to link in Ruler UI.",
                    "default": ""
                },
                "alertmanagers": {
                    "type": "array",
                    "description": "Alert managers URLs array",
                    "default": [],
                    "items": {}
                },
                "alertmanagersConfig": {
                    "type": "string",
                    "description": "Alert managers configuration",
                    "default": ""
                },
                "evalInterval": {
                    "type": "string",
                    "description": "The default evaluation interval to use",
                    "default": "1m"
                },
                "clusterName": {
                    "type": "string",
                    "description": "Used to set the 'ruler_cluster' label",
                    "default": ""
                },
                "config": {
                    "type": "string",
                    "description": "Ruler configuration",
                    "default": ""
                },
                "existingConfigmap": {
                    "type": "string",
                    "description": "Name of existing ConfigMap with Ruler configuration",
                    "default": ""
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables for Thanos Ruler container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Thanos Ruler nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Thanos Ruler nodes",
                    "default": ""
                },
                "extraFlags": {
                    "type": "array",
                    "description": "Extra Flags to passed to Thanos Ruler",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Thanos Ruler replicas to deploy",
                    "default": 1
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy type for Thanos Ruler replicas",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "Statefulset Pod Management Policy Type",
                    "default": "OrderedReady"
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for the Thanos Ruler pods",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the filesystem used by Thanos Ruler pods",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable container security context for the Thanos Ruler containers",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the service user running the Thanos Ruler containers",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the Thanos Ruler containers to run as a non root user",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Switch privilegeEscalation possibility on or off for Thanos Ruler containers",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "mount / (root) as a readonly filesystem on Thanos Ruler containers",
                            "default": true
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Thanos Ruler container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Thanos Ruler container",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Thanos Ruler containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Thanos Ruler containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Thanos Ruler containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Thanos Ruler pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Extra containers running as sidecars to Thanos Ruler pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Extra volumes to add to Thanos Ruler",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Extra volume mounts to add to the ruler container",
                    "default": [],
                    "items": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Ruler pod affinity preset",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Ruler pod anti-affinity preset. Ignored if `ruler.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Thanos Ruler node affinity preset type. Ignored if `ruler.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Thanos Ruler node label key to match. Ignored if `ruler.affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Thanos Ruler node label values to match. Ignored if `ruler.affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Thanos Ruler affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Thanos Ruler node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Thanos Ruler tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Thanos Ruler pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Thanos Ruler pods",
                    "default": {}
                },
                "dnsConfig": {
                    "type": "object",
                    "description": "Deployment pod DNS config",
                    "default": {}
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Deployment pod DNS policy",
                    "default": ""
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Thanos Ruler container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Thanos Ruler priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Thanos Ruler pods",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for Thanos Ruler pods assignment spread across your cluster among failure-domains",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Thanos Ruler service HTTP port",
                                    "default": 9090
                                },
                                "grpc": {
                                    "type": "number",
                                    "description": "Thanos Ruler service GRPC port",
                                    "default": 10901
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Specify the Thanos Ruler HTTP nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                },
                                "grpc": {
                                    "type": "string",
                                    "description": "Specify the Thanos Ruler GRPC nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Thanos Ruler service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Load balancer IP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Address that are allowed when service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Thanos Ruler service externalTrafficPolicy",
                            "default": "Cluster"
                        },
                        "labels": {
                            "type": "object",
                            "description": "Extra labels for Thanos Ruler service",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Ruler service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the Thanos Ruler service",
                            "default": [],
                            "items": {}
                        },
                        "labelSelectorsOverride": {
                            "type": "object",
                            "description": "Selector for Thanos Query service",
                            "default": {}
                        },
                        "additionalHeadless": {
                            "type": "boolean",
                            "description": "Additional Headless service",
                            "default": false
                        },
                        "headless": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for the headless service.",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable data persistence using PVC(s) on Thanos Ruler pods",
                            "default": true
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "Specify the `storageClass` used to provision the volume",
                            "default": ""
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "PVC Access Modes for data volume",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "PVC Storage Request for data volume",
                            "default": "8Gi"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the PVC",
                            "default": {}
                        },
                        "existingClaim": {
                            "type": "string",
                            "description": "Name of an existing PVC to use",
                            "default": ""
                        }
                    }
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Enable/disable auto mounting of the service account token only for the sts",
                    "default": true
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Ruler Service Account",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Enable/disable auto mounting of the service account token",
                            "default": true
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable autoscaling for Thanos Ruler",
                            "default": false
                        },
                        "minReplicas": {
                            "type": "string",
                            "description": "Minimum number of Thanos Ruler replicas",
                            "default": ""
                        },
                        "maxReplicas": {
                            "type": "string",
                            "description": "Maximum number of Thanos Ruler replicas",
                            "default": ""
                        },
                        "targetCPU": {
                            "type": "string",
                            "description": "Target CPU utilization percentage",
                            "default": ""
                        },
                        "targetMemory": {
                            "type": "string",
                            "description": "Target Memory utilization percentage",
                            "default": ""
                        }
                    }
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation for Thanos Ruler",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress controller resource",
                            "default": false
                        },
                        "hostname": {
                            "type": "string",
                            "description": "Default host for the ingress resource",
                            "default": "thanos-ruler.local"
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                            "default": {}
                        },
                        "extraHosts": {
                            "type": "array",
                            "description": "The list of additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "extraTls": {
                            "type": "array",
                            "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "secrets": {
                            "type": "array",
                            "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                            "default": [],
                            "items": {}
                        },
                        "extraRules": {
                            "type": "array",
                            "description": "Additional rules to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        },
                        "apiVersion": {
                            "type": "string",
                            "description": "Force Ingress API version (automatically detected if not set)",
                            "default": ""
                        },
                        "path": {
                            "type": "string",
                            "description": "Ingress path",
                            "default": "/"
                        },
                        "pathType": {
                            "type": "string",
                            "description": "Ingress path type",
                            "default": "ImplementationSpecific"
                        }
                    }
                }
            }
        },
        "receive": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable Thanos Receive component",
                    "default": false
                },
                "mode": {
                    "type": "string",
                    "description": "Mode to run receiver in. Valid options are \"standalone\" or \"dual-mode\"",
                    "default": "standalone"
                },
                "logLevel": {
                    "type": "string",
                    "description": "Thanos Receive log level",
                    "default": "info"
                },
                "logFormat": {
                    "type": "string",
                    "description": "Thanos Receive log format",
                    "default": "logfmt"
                },
                "tsdbRetention": {
                    "type": "string",
                    "description": "Thanos Receive TSDB retention period",
                    "default": "15d"
                },
                "replicationFactor": {
                    "type": "number",
                    "description": "Thanos Receive replication-factor",
                    "default": 1
                },
                "config": {
                    "type": "array",
                    "description": "Receive Hashring configuration",
                    "default": [],
                    "items": {}
                },
                "existingConfigmap": {
                    "type": "string",
                    "description": "Name of existing ConfigMap with Thanos Receive Hashring configuration",
                    "default": ""
                },
                "replicaLabel": {
                    "type": "string",
                    "description": "Label to treat as a replica indicator along which data is de-duplicated",
                    "default": "replica"
                },
                "grpc": {
                    "type": "object",
                    "properties": {
                        "server": {
                            "type": "object",
                            "properties": {
                                "tls": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable TLS encryption in the GRPC server",
                                            "default": false
                                        },
                                        "autoGenerated": {
                                            "type": "boolean",
                                            "description": "Create self-signed TLS certificates. Currently only supports PEM certificates",
                                            "default": false
                                        },
                                        "cert": {
                                            "type": "string",
                                            "description": "TLS Certificate for GRPC server - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "TLS Key for GRPC server - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "ca": {
                                            "type": "string",
                                            "description": "TLS CA to verify clients against - ignored if existingSecret is provided",
                                            "default": ""
                                        },
                                        "existingSecret": {
                                            "type": "object",
                                            "description": "Existing secret containing your own TLS certificates",
                                            "default": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables for Thanos Receive container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Thanos Receive nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Thanos Receive nodes",
                    "default": ""
                },
                "extraFlags": {
                    "type": "array",
                    "description": "Extra Flags to passed to Thanos Receive",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Thanos Receive replicas to deploy",
                    "default": 1
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy type for Thanos Receive replicas",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "Statefulset Pod management policy: OrderedReady (default) or Parallel",
                    "default": "OrderedReady"
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for the Thanos Receive pods",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the filesystem used by Thanos Receive pods",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable container security context for the Thanos Receive containers",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the service user running the Thanos Receive containers",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the Thanos Receive containers to run as a non root user",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Switch privilegeEscalation possibility on or off for Thanos Receive containers",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "mount / (root) as a readonly filesystem on Thanos Receive containers",
                            "default": true
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Thanos Receive container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Thanos Receive container",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Thanos Receive containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Thanos Receive containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Thanos Receive containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Thanos Receive pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Extra containers running as sidecars to Thanos Receive pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Extra volumes to add to Thanos Receive",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Extra volume mounts to add to the receive container",
                    "default": [],
                    "items": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Receive pod affinity preset",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Receive pod anti-affinity preset. Ignored if `ruler.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Thanos Receive node affinity preset type. Ignored if `receive.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Thanos Receive node label key to match. Ignored if `receive.affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Thanos Receive node label values to match. Ignored if `receive.affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Thanos Receive affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Thanos Receive node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Thanos Receive tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "statefulsetLabels": {
                    "type": "object",
                    "description": "Thanos Receive statefulset labels",
                    "default": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Thanos Receive pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Thanos Receive pods",
                    "default": {}
                },
                "dnsConfig": {
                    "type": "object",
                    "description": "Deployment pod DNS config",
                    "default": {}
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Deployment pod DNS policy",
                    "default": ""
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Thanos Receive container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Thanos Receive priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Thanos Receive pods",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for Thanos Receive pods assignment spread across your cluster among failure-domains",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Thanos Ruler service HTTP port",
                                    "default": 10902
                                },
                                "grpc": {
                                    "type": "number",
                                    "description": "Thanos Ruler service GRPC port",
                                    "default": 10901
                                },
                                "remote": {
                                    "type": "number",
                                    "description": "Thanos Ruler service remote port",
                                    "default": 19291
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Specify the Thanos Ruler HTTP nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                },
                                "grpc": {
                                    "type": "string",
                                    "description": "Specify the Thanos Ruler GRPC nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Specify the Thanos Ruler remote nodePort value for the LoadBalancer and NodePort service types",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Thanos Ruler service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Load balancer IP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Addresses that are allowed when service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Thanos Ruler service externalTrafficPolicy",
                            "default": "Cluster"
                        },
                        "labels": {
                            "type": "object",
                            "description": "Extra labels for Thanos Receive service",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Receive service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the Thanos Receive service",
                            "default": [],
                            "items": {}
                        },
                        "labelSelectorsOverride": {
                            "type": "object",
                            "description": "Selector for Thanos receive service",
                            "default": {}
                        },
                        "additionalHeadless": {
                            "type": "boolean",
                            "description": "Additional Headless service",
                            "default": false
                        },
                        "headless": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for the headless service.",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Enable/disable auto mounting of the service account token only for the sts",
                    "default": true
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Receive Service Account",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Enable/disable auto mounting of the service account token",
                            "default": true
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable autoscaling for Thanos Receive",
                            "default": false
                        },
                        "minReplicas": {
                            "type": "string",
                            "description": "Minimum number of Thanos Receive replicas",
                            "default": ""
                        },
                        "maxReplicas": {
                            "type": "string",
                            "description": "Maximum number of Thanos Receive replicas",
                            "default": ""
                        },
                        "targetCPU": {
                            "type": "string",
                            "description": "Target CPU utilization percentage",
                            "default": ""
                        },
                        "targetMemory": {
                            "type": "string",
                            "description": "Target Memory utilization percentage",
                            "default": ""
                        }
                    }
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation for Thanos Receive",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable data persistence using PVC(s) on Thanos Receive pods",
                            "default": true
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "Specify the `storageClass` used to provision the volume",
                            "default": ""
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "PVC Access Modes for data volume",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "PVC Storage Request for data volume",
                            "default": "8Gi"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the PVC",
                            "default": {}
                        },
                        "existingClaim": {
                            "type": "string",
                            "description": "Name of an existing PVC to use",
                            "default": ""
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Set to true to enable ingress record generation",
                            "default": false
                        },
                        "hostname": {
                            "type": "string",
                            "description": "When the ingress is enabled, a host pointing to this will be created",
                            "default": "thanos-receive.local"
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                            "default": {}
                        },
                        "extraHosts": {
                            "type": "array",
                            "description": "The list of additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "extraTls": {
                            "type": "array",
                            "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                            "default": [],
                            "items": {}
                        },
                        "secrets": {
                            "type": "array",
                            "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                            "default": [],
                            "items": {}
                        },
                        "extraRules": {
                            "type": "array",
                            "description": "Additional rules to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "Enable TLS configuration for the hostname defined at `receive.ingress.hostname` parameter",
                            "default": false
                        },
                        "selfSigned": {
                            "type": "boolean",
                            "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                            "default": false
                        },
                        "apiVersion": {
                            "type": "string",
                            "description": "Override API Version (automatically detected if not set)",
                            "default": ""
                        },
                        "path": {
                            "type": "string",
                            "description": "Ingress Path",
                            "default": "/"
                        },
                        "pathType": {
                            "type": "string",
                            "description": "Ingress Path type",
                            "default": "ImplementationSpecific"
                        }
                    }
                }
            }
        },
        "receiveDistributor": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable Thanos Receive Distributor component",
                    "default": false
                },
                "logLevel": {
                    "type": "string",
                    "description": "Thanos Receive Distributor log level",
                    "default": "info"
                },
                "logFormat": {
                    "type": "string",
                    "description": "Thanos Receive Distributor log format",
                    "default": "logfmt"
                },
                "replicaLabel": {
                    "type": "string",
                    "description": "Label to treat as a replica indicator along which data is de-duplicated",
                    "default": "replica"
                },
                "replicationFactor": {
                    "type": "number",
                    "description": "Thanos Receive Distributor replication-factor",
                    "default": 1
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables for Thanos Receive Distributor container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Thanos Receive Distributor nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Thanos Receive Distributor nodes",
                    "default": ""
                },
                "extraFlags": {
                    "type": "array",
                    "description": "Extra Flags to passed to Thanos Receive Distributor",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Thanos Receive Distributor replicas to deploy",
                    "default": 1
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy type for Thanos Receive Distributor replicas",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for the Thanos Receive Distributor pods",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the filesystem used by Thanos Receive Distributor pods",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable container security context for the Thanos Receive Distributor containers",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the service user running the Thanos Receive Distributor containers",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the Thanos Receive Distributor containers to run as a non root user",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Switch privilegeEscalation possibility on or off for Thanos Receive Distributor containers",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "mount / (root) as a readonly filesystem on Thanos Receive Distributor containers",
                            "default": true
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Thanos Receive container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Thanos Receive container",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Thanos Receive Distributor containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Thanos Receive Distributor containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 30
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Thanos Receive Distributor containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Thanos Receive Distributor pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Extra containers running as sidecars to Thanos Receive Distributor pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Extra volumes to add to Thanos Receive Distributor",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Extra volume mounts to add to the receive distributor container",
                    "default": [],
                    "items": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Receive pod affinity preset",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Thanos Receive pod anti-affinity preset. Ignored if `receiveDistributor.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Thanos Receive node affinity preset type. Ignored if `receiveDistributor.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Thanos Receive node label key to match. Ignored if `receiveDistributor.affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Thanos Receive node label values to match. Ignored if `receiveDistributor.affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Thanos Receive Distributor affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Thanos Receive Distributor node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Thanos Receive Distributor tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Thanos Receive Distributor pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Thanos Receive Distributor pods",
                    "default": {}
                },
                "dnsConfig": {
                    "type": "object",
                    "description": "Deployment pod DNS config",
                    "default": {}
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Deployment pod DNS policy",
                    "default": ""
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Thanos Receive Distributor container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Thanos Receive Distributor priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Thanos Receive Distributor pods",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for Thanos Receive Distributor pods assignment spread across your cluster among failure-domains",
                    "default": [],
                    "items": {}
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Enable/disable auto mounting of the service account token only for the deployment",
                    "default": true
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for Thanos Receive Distributor Service Account",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Enable/disable auto mounting of the service account token",
                            "default": true
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable autoscaling for Thanos Receive Distributor",
                            "default": false
                        },
                        "minReplicas": {
                            "type": "string",
                            "description": "Minimum number of Thanos Receive Distributor replicas",
                            "default": ""
                        },
                        "maxReplicas": {
                            "type": "string",
                            "description": "Maximum number of Thanos Receive Distributor replicas",
                            "default": ""
                        },
                        "targetCPU": {
                            "type": "string",
                            "description": "Target CPU utilization percentage",
                            "default": ""
                        },
                        "targetMemory": {
                            "type": "string",
                            "description": "Target Memory utilization percentage",
                            "default": ""
                        }
                    }
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation for Thanos Receive Distributor",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the export of Prometheus metrics",
                    "default": false
                },
                "serviceMonitor": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Specify if a ServiceMonitor will be deployed for Prometheus Operator",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace in which Prometheus is running",
                            "default": ""
                        },
                        "labels": {
                            "type": "object",
                            "description": "Extra labels for the ServiceMonitor",
                            "default": {}
                        },
                        "jobLabel": {
                            "type": "string",
                            "description": "The name of the label on the target service to use as the job name in Prometheus",
                            "default": ""
                        },
                        "interval": {
                            "type": "string",
                            "description": "How frequently to scrape metrics",
                            "default": ""
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "Timeout after which the scrape is ended",
                            "default": ""
                        },
                        "metricRelabelings": {
                            "type": "array",
                            "description": "Specify additional relabeling of metrics",
                            "default": [],
                            "items": {}
                        },
                        "relabelings": {
                            "type": "array",
                            "description": "Specify general relabeling",
                            "default": [],
                            "items": {}
                        },
                        "selector": {
                            "type": "object",
                            "description": "Prometheus instance selector labels",
                            "default": {}
                        },
                        "extraParameters": {
                            "type": "object",
                            "description": "Any extra parameter to be added to the endpoint configured in the ServiceMonitor",
                            "default": {}
                        }
                    }
                },
                "prometheusRule": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "If `true`, creates a Prometheus Operator PrometheusRule (also requires `metrics.enabled` to be `true`)",
                            "default": false
                        },
                        "default": {
                            "type": "object",
                            "properties": {
                                "sidecarJobRegex": {
                                    "type": "string",
                                    "description": "Allows the customization of the thanos-sidecar job name to use in the sidecar prometheus alerts",
                                    "default": ".*thanos-sidecar.*"
                                },
                                "create": {
                                    "type": "boolean",
                                    "description": "would create all default prometheus alerts",
                                    "default": false
                                },
                                "disabled": {
                                    "type": "object",
                                    "description": "disable one specific prometheus alert rule",
                                    "default": {}
                                }
                            }
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace in which the PrometheusRule CRD is created",
                            "default": ""
                        },
                        "additionalLabels": {
                            "type": "object",
                            "description": "Additional labels for the prometheusRule",
                            "default": {}
                        },
                        "groups": {
                            "type": "array",
                            "description": "Prometheus Rule Groups for Thanos components",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Init container volume-permissions image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Init container volume-permissions image repository",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Init container volume-permissions image tag",
                            "default": "11-debian-11-r57"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Init container volume-permissions image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Specify docker-registry secret names as an array",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        },
        "minio": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable MinIO&reg; chart installation",
                    "default": false
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "rootUser": {
                            "type": "string",
                            "description": "MinIO&reg; root username",
                            "default": "admin"
                        },
                        "rootPassword": {
                            "type": "string",
                            "description": "Password for MinIO&reg; root user",
                            "default": ""
                        }
                    }
                },
                "defaultBuckets": {
                    "type": "string",
                    "description": "Comma, semi-colon or space separated list of MinIO&reg; buckets to create",
                    "default": "thanos"
                }
            }
        },
        "networkPolicy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable creation of NetworkPolicy resources. Only Ingress traffic is filtered for now.",
                    "default": false
                },
                "allowExternal": {
                    "type": "boolean",
                    "description": "Don't require client label for connections",
                    "default": true
                },
                "explicitNamespacesSelector": {
                    "type": "object",
                    "description": "A Kubernetes LabelSelector to explicitly select namespaces from which traffic could be allowed",
                    "default": {}
                }
            }
        }
    }
}